<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="link.yifu.dao.UserRoleDAO">

    <resultMap id="userRole" type="link.yifu.entity.UserRoleEntity">
        <result property="id" column="id"/>
        <result property="roleID" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="userID" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="status" column="status"/>
        <result property="createdTime" column="created_time"/>
        <result property="lastModifiedTime" column="last_modified_time"/>
    </resultMap>

    <select id="get" parameterType="map" resultMap="userRole">
        select a.id, a.role_id, a.user_id, b.name as role_name, c.name as user_name
        FROM `user_role` a, `role` b, `user` c
        where a.status != 0 and a.role_id = b.id and a.user_id = c.id
        <if test="roleID != null and roleID != ''">
            and a.role_id = #{roleID}
        </if>
        <if test="userID != null and userID != ''">
            and a.user_id = #{userID}
        </if>
        order by a.id desc
        <if test="start != null and limit != null">
            limit ${start}, ${limit}
        </if>
    </select>

    <select id="getCount" parameterType="map" resultType="java.lang.Integer">
        select count(*) as total
        FROM `user_role`
        where status != 0
        <if test="roleID != null and roleID != ''">
            and role_id = #{roleID}
        </if>
        <if test="userID != null and userID != ''">
            and user_id = #{userID}
        </if>
    </select>

    <select id="getByEntity" parameterType="link.yifu.entity.UserRoleEntity" resultMap="userRole">
        select id, role_id, user_id
        FROM `user_role`
        where status != 0 and id = #{id}
        order by id desc limit 1
    </select>

    <insert id="add" parameterType="link.yifu.entity.UserRoleEntity">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into `user_role` (`role_id`, `user_id`, `created_time`) VALUES
        (#{roleID}, #{userID}, NOW())
    </insert>

    <insert id="addBatch" parameterType="java.util.List" useGeneratedKeys="true">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into `user_role` (`role_id`, `user_id`, `created_time`) VALUES
        <foreach collection="list" item="userRole" index="index" separator=",">
            (
            #{userRole.roleID},#{userRole.userID},NOW()
            )
        </foreach>
    </insert>

    <update id="update" parameterType="link.yifu.entity.UserRoleEntity">
        update `role_user` set `user_id` = #{userID} where id = #{id}
    </update>

    <update id="delete" parameterType="link.yifu.entity.UserRoleEntity">
        update `user_role` set status = 0
        where id = #{id}
        <if test="roleID != null and roleID !=''">
            and role_id = #{roleID}
        </if>
        <if test="userID != null and userID != ''">
            and user_id = #{userID}
        </if>
    </update>



</mapper>